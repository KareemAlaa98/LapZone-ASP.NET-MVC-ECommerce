@model List<Order>

@{
    ViewData["Title"] = "Orders";
    decimal newPrice = 0;
}

<div class="container my-5">
    @foreach (var order in Model)
    {
        decimal orderTotal = 0;

        <div class="card mb-4">
            <div style="display:flex;gap:35px" class="card-header bg-primary text-white">

                <p>
                    <span style="font-size: 18px;font-weight:bold;color:white;">Order Code: </span>
                    <span style="color:white;"> @order.OrderCode</span>
                </p>

                <p>
                    <span style="font-size: 18px;font-weight:bold;color:white;">Order Date & Time : </span>
                    <span style="color:white;">@order.CreatedAt</span>
                </p>
                <p>
                    <span style="font-size: 18px;font-weight:bold;color:white;">Order Status : </span>
                    <span style="color:white;">@order.Status</span>
                </p>


            </div>
            <di style="border:3px solid black" class="card-body">
                <h4 class="card-title">Order Items:</h4>
                @foreach (var item in order.OrderItems)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    <img src="@Url.Content("/images/products/product-" + item.Product.Id + "/" + item.Product.ProductImages[0].ImageUrl)" class="img-fluid" alt="@item.Product.Name">
                                </div>
                                <div class="col-md-4">
                                    <h5 class="mb-0">@item.Product.Name</h5>

                                </div>
                                <div class="col-md-2 text-center">
                                    <p class="mb-0">Quantity: @item.Quantity</p>
                                </div>
                                <div class="col-md-2 text-center">
                                    @if (item.Product.DiscountId != null)
                                    {
                                        newPrice = item.Product.Price - (item.Product.Price * item.Product.Discount.DiscountPercent / 100);
                                        <p class="mb-0 text-muted"><s>@item.Product.Price<small>EGP</small></s></p>
                                        <p class="mb-0">@newPrice<small>EGP</small></p>
                                    }
                                    else
                                    {
                                        newPrice = item.Product.Price;
                                        <p class="mb-0">@newPrice<small>EGP</small></p>
                                    }
                                </div>
                                <div class="col-md-2 text-center">
                                    <p class="mb-0">
                                        Total:<br />
                                        @(item.Quantity * newPrice)<small>EGP</small>
                                    </p>

                                    @{
                                        orderTotal += item.Quantity * newPrice;
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <hr />
                <div style=" display:flex;justify-content:space-between">
                    <p>
                        <button style="font-size:20px;text-align:center;" class="btn btn-danger rounded bg-primary">
                            Order Total :  @orderTotal<small>EGP</small>
                        </button>
                    </p>
                    @if (order.Status == OrderStatus.Processing)
                    {
                        <a class="btn btn-danger border border-dark rounded" href="/order/cancelorder/@order.Id">Cancel Order</a>
                    }
                    else
                    {
                        <button class="btn btn-primary border border-dark rounded" disabled>Cancel Order</button>
                    }

                </div>
            </di>
        </div>
    }
</div>















@* @model List<Order>

@{
    ViewData["Title"] = "Orders";
    decimal newPrice = 0;
}

@foreach (var order in Model)
{
    <h2>Order Code: @order.OrderCode </h2>
    <h2>Order Date & Time: @order.CreatedAt </h2>
    <h2>Total: @order.Total<small>EGP</small></h2>
    <h2>Status: @order.Status</h2>
    @if (order.Status == OrderStatus.Processing){
          <a class="btn btn-sm btn-danger" href="/order/cancelorder/@order.Id">Cancel Order</a>
    }else{<button class="btn btn-sm btn-primary" disabled>Cancel Order</button>}
    <h4>Order Items: </h4>
    <div>
        @foreach (var item in order.OrderItems)
        {
            <h5>@item.Product.Name</h5>
            <h5>Quantity: @item.Quantity</h5>

            @if (item.Product.DiscountId != null)
            {
                newPrice = @item.Product.Price - (@item.Product.Price * @item.Product.Discount.DiscountPercent / 100);
                <h5>
                    Unit Price: @newPrice <small>EGP</small> <span><small><s class="text-danger">@item.Product.Price</s></small></span>
                </h5>
                <h5>
                    Price: @(item.Quantity * newPrice) <small>EGP</small> <span><small>@($" ({item.Quantity} X {newPrice})")</small></span>
                </h5>
            }
            else
            {
                newPrice = item.Product.Price;
                <h5>
                    Unit Price: @newPrice <small>EGP</small>
                </h5>
                <h5>
                    Price: @(item.Quantity * newPrice) <small>EGP</small> <span><small>@($" ({item.Quantity} x {newPrice})")</small></span>
                </h5>
            }

            <hr />
        }
    </div>
    <hr />
    <hr />

} *@